/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/draft/{year}": {
    /**
     * **Description:**
     * This endpoint returns biographical and financial data for the Rule 4 draft.
     *
     * **Return Includes:** Player name, id, financial data, & team data.
     *
     * **Required Parameters:** year is required to run this call.
     *
     * ---
     * **Example of call with required parameters:**
     *
     * https://statsapi.mlb.com/api/v1/draft/2018
     *
     * ---
     * **Example of call with all parameters:**
     *
     * https://statsapi.mlb.com/api/v1/draft/2018?limit=1&round=1&name=M&school=A&position=P&teamId=116&playerId=663554&bisPlayerId=759143
     */
    get: operations["draft"];
  };
  "/v1/draft/prospects/{year}": {
    /**
     * **Description:**
     * This endpoint returns biographical and financial data for Rule 4 draft eligible prospects.
     *
     * **Return Includes:** Player name, id, financial data, & team data.
     *
     * **Required Parameters:** year is required to run this call.
     *
     * ---
     * **Example of call with required parameters:**
     *
     *  https://statsapi.mlb.com/api/v1/draft/prospects/2018
     *
     * ---
     * **Example of call with all parameters:**
     *
     *  https://statsapi.mlb.com/api/v1/draft/prospects/2018?limit=1&round=1&name=M&school=A&position=P&teamId=116&playerId=663554&bisPlayerId=759143
     */
    get: operations["draftProspects"];
  };
  "/v1/draft/{year}/latest": {
    /**
     * **Description:**
     * This endpoint returns biographical and financial data for the most recent pick in the Rule 4 draft.
     *
     * **Return Includes:** Player name, id, financial data, & team data.
     *
     * **Required Parameters:** year is required to run this call.
     *
     * ---
     * **Example of call with required parameters:**
     *
     * https://statsapi.mlb.com/api/v1/draft/2018/latest
     */
    get: operations["latestDraftPicks"];
  };
}

export interface components {
  schemas: {
    AdditionalBioRestObject: {
      homeTown?: string;
    };
    AwardRestObject: {
      /**
       * Format: date
       * @description Format: YYYY-MM-DDTHH:MM:SSZ
       */
      date?: string;
      description?: string;
      history?: string;
      homePageUrl?: string;
      /** @description Unique Identifier */
      id?: string;
      imageUrl?: string;
      /** @description The league the division belongs to<br/>For a list of all leagueIds: https://statsapi.mlb.com/api/v1/leagues */
      league?: components["schemas"]["LeagueRestObject"];
      /** @description Unique Name */
      name?: string;
      notes?: string;
      /** @description All of the details of a player */
      player?: components["schemas"]["BaseballPersonRestObject"];
      recipientType?: string;
      results?: components["schemas"]["AwardResultRestObject"][];
      /** @description Season of play */
      season?: string;
      /** @description Shortened version of name. Format: AL East, SF Giants */
      shortName?: string;
      /**
       * Format: int32
       * @description The order of sorting, ascending or descending
       */
      sortOrder?: number;
      /** @description The sport the league belongs to<br/>For a list of all sportIds: https://statsapi.mlb.com/api/v1/sports */
      sport?: components["schemas"]["SportRestObject"];
      /** @description All of the details of a team */
      team?: components["schemas"]["TeamRestObject"];
      /** Format: int32 */
      votes?: number;
    };
    AwardResultRestObject: {
      /** Format: int32 */
      seasonId?: number;
      winners?: components["schemas"]["AwardWinnerRestObject"][];
    };
    AwardWinnerRestObject: {
      coach?: components["schemas"]["PersonRestObject"];
      /** @description All of the details of a player */
      player?: components["schemas"]["PersonRestObject"];
      rank?: string;
      /** @description All of the details of a team */
      team?: components["schemas"]["TeamRestObject"];
    };
    BaseballDraftLatestRestObject: unknown;
    BaseballDraftListRestObject: {
      /** @description All of the details of the draft a player was drafted in */
      drafts?: components["schemas"]["BaseballDraftRestObject"];
    };
    BaseballDraftProspectRestObject: {
      /**
       * Format: int32
       * @description A unique identifier for a player in the EBIS system
       */
      bisPlayerId?: number;
      /** Format: int32 */
      bisSchoolId?: number;
      blurb?: string;
      draftType?: components["schemas"]["DraftTypeEnumRestObject"];
      /** @description Links to images of person. */
      headshotLink?: string;
      home?: components["schemas"]["LocationRestObject"];
      /** @description Whether or not the players been drafted */
      isDrafted?: boolean;
      isPass?: boolean;
      /** @description All of the details of a player */
      person?: components["schemas"]["BaseballPersonRestObject"];
      /** Format: int32 */
      pickNumber?: number;
      /** @description Round in which a player was drafted */
      pickRound?: string;
      pickValue?: string;
      /** Format: int32 */
      rank?: number;
      /** Format: int32 */
      roundPickNumber?: number;
      school?: components["schemas"]["SchoolRestObject"];
      scoutingReport?: string;
      signingBonus?: string;
      /** @description All of the details of a team */
      team?: components["schemas"]["BaseballTeamRestObject"];
      /** @description Year the player was drafted. Format: 2000 */
      year?: string;
    };
    BaseballDraftRestObject: {
      /**
       * Format: int32
       * @description Year the player was drafted. Format: 2000
       */
      draftYear?: number;
      rounds?: components["schemas"]["BaseballDraftRoundRestObject"][];
    };
    BaseballDraftRoundRestObject: {
      picks?: components["schemas"]["BaseballDraftProspectRestObject"][];
      /** @description Round in which a player was drafted */
      round?: string;
    };
    BaseballPersonRestObject: {
      alumniLastSeason?: string;
      articles?: components["schemas"]["IFeedRestObject"][];
      /** @description Bat side of hitter */
      batSide?: components["schemas"]["DynamicEnumRestObject"];
      drafts?: components["schemas"]["BaseballDraftProspectRestObject"][];
      firstLastName?: string;
      fullFMLName?: string;
      fullLFMName?: string;
      initLastName?: string;
      lastFirstName?: string;
      lastInitName?: string;
      mixedFeed?: components["schemas"]["IFeedRestObject"][];
      /** Format: date */
      mlbDebutDate?: string;
      nameSlug?: string;
      nameTitle?: string;
      note?: string;
      /** @description Handedness of pitcher */
      pitchHand?: components["schemas"]["DynamicEnumRestObject"];
      /** Format: double */
      strikeZoneBottom?: number;
      /** Format: double */
      strikeZoneTop?: number;
      transactions?: components["schemas"]["TransactionRestObject"][];
      videos?: components["schemas"]["IFeedRestObject"][];
    };
    BaseballTeamRestObject: {
      springLeague?: components["schemas"]["LeagueRestObject"];
    };
    BroadcastRestObject: {
      callSign?: string;
      homeAway?: string;
      /** Format: int32 */
      id?: number;
      isNational?: boolean;
      language?: string;
      /** @description The name of the broadcast. Format: KWKW 1330, 95.7 FM The Game, etc */
      name?: string;
      site?: string;
      /** Format: int32 */
      sourceUrl?: number;
      /** @description The type of broadcast. Format: AM, FM, TV, etc */
      type?: string;
      videoResolution?: components["schemas"]["VideoResolutionEnumRestObject"];
    };
    Conference: unknown;
    ConferenceRestObject: {
      /**
       * Format: int32
       * @description Unique Identifier
       */
      id?: number;
      /** @description Link to full resource */
      link?: string;
      /** @description Unique Name */
      name?: string;
    };
    CoordinateRestObject: {
      coordinates?: string[];
      label?: string;
      /** Format: double */
      latitude?: number;
      /** Format: double */
      longitude?: number;
    };
    DecisionRestObject: {
      /** @description All of the details of the player who lost */
      loser?: components["schemas"]["PersonRestObject"];
      /** @description All of the details of the player who won */
      winner?: components["schemas"]["PersonRestObject"];
    };
    Division: unknown;
    DivisionRestObject: {
      /** @description Shortened version of short name. Format: ALE, SFG */
      abbreviation?: string;
      /** @description All the details of a conference */
      conference?: components["schemas"]["ConferenceRestObject"];
      /** @description Whether or not there is a wildcard */
      hasWildcard?: boolean;
      /**
       * Format: int32
       * @description Unique Identifier
       */
      id?: number;
      /** @description The league the division belongs to<br/>For a list of all leagueIds: https://statsapi.mlb.com/api/v1/leagues */
      league?: components["schemas"]["LeagueRestObject"];
      /** @description Link to full resource */
      link?: string;
      /** @description Unique Name */
      name?: string;
      /** @description Shortened version of name. Format: AL East, SF Giants */
      nameShort?: string;
      /** @description The sport the league belongs to<br/>For a list of all sportIds: https://statsapi.mlb.com/api/v1/sports */
      sport?: components["schemas"]["SportRestObject"];
    };
    DraftTypeEnumRestObject: unknown;
    DynamicEnumRestObject: {
      code?: string;
      description?: string;
      /** Format: int32 */
      sortOrder?: number;
    };
    EducationRestObject: {
      /** @description The player's college(s) */
      colleges?: components["schemas"]["SchoolRestObject"][];
      /** @description The player's highschool(s) */
      highschools?: components["schemas"]["SchoolRestObject"][];
    };
    FieldInfoRestObject: {
      /**
       * Format: int32
       * @description Number of seats in the venue.
       */
      capacity?: number;
    };
    FranchiseRestObject: {
      /** Format: int32 */
      firstSeasonId?: number;
      /** Format: int32 */
      franchiseId?: number;
      /** Format: int32 */
      lastSeasonId?: number;
      /** @description Link to full resource */
      link?: string;
      /** @description Unique Team Location. Toronto, Bronx, etc */
      locationName?: string;
      /** Format: int32 */
      mostRecentTeamId?: number;
      /** @description All of the details of a roster */
      roster?: components["schemas"]["RosterRestObject"];
      /** @description Unique Team Name. Blue Jays, Yankees, etc */
      teamName?: string;
    };
    GameContentRestObject: {
      /** @description All of the details of the game editorial */
      editorial?: components["schemas"]["GameEditorialRestObject"];
      gameNotes?: components["schemas"]["GameNotesRestObject"];
      /** @description All of the details of the game highlights */
      highlights?: components["schemas"]["GameHighlightsRestObject"];
      /** @description Link to full resource */
      link?: string;
      /** @description All of the details of the game media */
      media?: components["schemas"]["GameMediaRestObject"];
      /** @description List of boolean values for Game Content */
      summary?: components["schemas"]["GameContentSummaryRestObject"];
    };
    GameContentSummaryRestObject: {
      hasHighlightsVideo?: boolean;
      hasPreviewArticle?: boolean;
      hasRecapArticle?: boolean;
      hasWrapArticle?: boolean;
    };
    GameEditorialRestObject: {
      /** @description Gives the articles about the game */
      articles?: components["schemas"]["JsonNode"];
      /** @description Gives the written preview of upcoming game */
      preview?: components["schemas"]["JsonNode"];
      /** @description Lists the probable starting pitchers for the game */
      probables?: components["schemas"]["JsonNode"];
      /** @description Gives the written recap of the game */
      recap?: components["schemas"]["JsonNode"];
      /** @description Gives the written wrap of the game */
      wrap?: components["schemas"]["JsonNode"];
    };
    GameHighlightsRestObject: {
      gameCenter?: components["schemas"]["JsonNode"];
      highlights?: components["schemas"]["JsonNode"];
      live?: components["schemas"]["JsonNode"];
      milestone?: components["schemas"]["JsonNode"];
      scoreboard?: components["schemas"]["JsonNode"];
      scoreboardPreview?: components["schemas"]["JsonNode"];
    };
    GameInfoRestObject: {
      /**
       * Format: int32
       * @description Number of fans at the stadium as recorded by the club.
       */
      attendance?: number;
      /**
       * Format: int32
       * @description Amount of timet he game was delayed (in seconds).
       */
      delayDurationMinutes?: number;
      /**
       * Format: date-time
       * @description Time that the first pitch was thrown.
       */
      firstPitch?: string;
      /**
       * Format: int32
       * @description Amount of time the game lasted (in seconds).
       */
      gameDurationMinutes?: number;
    };
    GameMediaRestObject: {
      /** @description Whether or not the game is enhanced */
      enhancedGame?: boolean;
      /** @description Lists the title and items for media content. Format: Title - Extended Highlights, Items - additional fields for all relevant items */
      epg?: components["schemas"]["JsonNode"];
      /** @description Lists the title and items for media content. Format: Title - Extended Highlights, Items - additional fields for all relevant items */
      epgAlternate?: components["schemas"]["JsonNode"];
      featuredMedia?: components["schemas"]["JsonNode"];
      /** @description Whether or not the game is free */
      freeGame?: boolean;
      milestones?: components["schemas"]["JsonNode"];
    };
    GameNotesRestObject: {
      notes?: components["schemas"]["JsonNode"];
    };
    GameStatusRestObject: {
      /** @description Format: Preview, Live or Final */
      abstractGameState?: string;
      /** @description Single digit/letter status. Format: I = In Progress, F = Final<br/>For a list of all gameStatus: https://statsapi.mlb.com/api/v1/gameStatus */
      codedGameState?: string;
      /** @description Description of game state. Format: Delayed: Rain */
      detailedState?: string;
      /** @description Whether or not the start time is TBD */
      startTimeTBD?: boolean;
      /** @description Expanded version of coded game state. Format: IR = In Progress and Rain Delay<br/>For a list of all gameStatus: https://statsapi.mlb.com/api/v1/gameStatus */
      statusCode?: string;
    };
    GroupedStatDataRestObject: unknown;
    IFeedRestObject: unknown;
    JsonNode: unknown;
    LeadersRestObject: {
      /** @description TBD */
      leaderCategory?: string;
      /** @description The league the division belongs to<br/>For a list of all leagueIds: https://statsapi.mlb.com/api/v1/leagues */
      league?: components["schemas"]["LeagueRestObject"];
      /** @description Season of play */
      season?: string;
      /** @description Category of statistic to return. <br/>For a list of all statGroups: https://statsapi.mlb.com/api/v1/statGroups */
      statGroup?: string;
      /** @description All of the details of a team */
      team?: components["schemas"]["TeamRestObject"];
    };
    League: unknown;
    LeagueRestObject: {
      /** @description Shortened version of short name. Format: ALE, SFG */
      abbreviation?: string;
      /** @description Whether or not the League has Conferences */
      conferencesInUse?: boolean;
      /** @description Whether or not the League has Divisions */
      divisionsInUse?: boolean;
      /** @description True if a league uses points for standings */
      hasPlayoffPoints?: boolean;
      /** @description Whether or not there is a split season */
      hasSplitSeason?: boolean;
      /** @description Whether or not there is a wildcard */
      hasWildCard?: boolean;
      /**
       * Format: int32
       * @description Unique Identifier
       */
      id?: number;
      /** @description Link to full resource */
      link?: string;
      /** @description Unique Name */
      name?: string;
      /** @description Shortened version of name. Format: AL East, SF Giants */
      nameShort?: string;
      /**
       * Format: int32
       * @description The number of regular season games
       */
      numGames?: number;
      /**
       * Format: int32
       * @description The number of teams
       */
      numTeams?: number;
      /**
       * Format: int32
       * @description The number of wildcard teams
       */
      numWildcardTeams?: number;
      /** @description Deprecated Field */
      orgCode?: string;
      /** @description Season of play */
      season?: string;
      /** @description Dates of specific points in a season */
      seasonDateInfo?: components["schemas"]["SeasonRestObject"];
      /** @description The status of the season. Format: offseason */
      seasonState?: string;
      /**
       * Format: int32
       * @description The order of sorting, ascending or descending
       */
      sortOrder?: number;
      /** @description Time zone the venue is located in */
      timeZone?: components["schemas"]["TimeZoneRestObject"];
    };
    LocationRestObject: {
      address1?: string;
      address2?: string;
      address3?: string;
      address4?: string;
      /** @description City where the venue is located. Format: Cleveland */
      city?: string;
      coordinates?: components["schemas"]["CoordinateRestObject"][];
      /** @description Filter players by their home country */
      country?: string;
      defaultCoordinates?: components["schemas"]["CoordinateRestObject"];
      postalCode?: string;
      /** @description State where the venue is located. Format: Ohio */
      state?: string;
      /** @description State abbrevation where the venue is located. Format: OH */
      stateAbbrev?: string;
    };
    OfficialRestObject: {
      official?: components["schemas"]["PersonRestObject"];
      officialType?: string;
    };
    OtherNamesRestObject: {
      firstInitialLastName?: string;
      lastFirstName?: string;
      lastNameFirstInitial?: string;
      phoneticName?: string;
      slug?: string;
    };
    Person: unknown;
    PersonRestObject: {
      /** @description Whether or not a player is active */
      active?: boolean;
      additionalBio?: components["schemas"]["AdditionalBioRestObject"];
      /** @description Whether or not a player is an alternate captain */
      alternateCaptain?: boolean;
      /** @description All of the details of a player's awards */
      awards?: components["schemas"]["AwardRestObject"][];
      /** @description City the player was born in. Format: La Romana */
      birthCity?: string;
      /** @description Country the player was born in. Format: Dominican Republic */
      birthCountry?: string;
      /**
       * Format: date
       * @description Birth date of a player. Format: 1983-01-07
       */
      birthDate?: string;
      /** @description State or Province the player was born in. Format: NY */
      birthStateProvince?: string;
      /** @description Name that shows up in the box score. Last name or last name and first initial */
      boxscoreName?: string;
      /** @description Whether or not a player is a captain */
      captain?: boolean;
      /**
       * Format: int32
       * @description Current age of a player. Format: 34
       */
      currentAge?: number;
      /** @description All of the details of a player's current team */
      currentTeam?: components["schemas"]["TeamRestObject"];
      /** @description City the player died in. Format: La Romana */
      deathCity?: string;
      /** @description Country the player died in. Format: Dominican Republic */
      deathCountry?: string;
      /**
       * Format: date
       * @description Death date of a player. Format: 1983-01-07
       */
      deathDate?: string;
      /** @description State or Province the player died in. Format: NY */
      deathStateProvince?: string;
      /** @description All of the details of the draft a player was drafted in */
      draft?: components["schemas"]["PlayerDraftInfoRestObject"][];
      /**
       * Format: int32
       * @description Year the player was drafted. Format: 2000
       */
      draftYear?: number;
      /** @description All of the details of a player's education */
      education?: components["schemas"]["EducationRestObject"];
      /** @description First name of a player */
      firstName?: string;
      /** @description Full name of a player. Format: Edwin Encarnacion */
      fullName?: string;
      /** @description Gender for a player. Format: M */
      gender?: string;
      /** @description Height of a player. Format: 6' 1 */
      height?: string;
      /**
       * Format: int32
       * @description Unique Player Identifier. Format: 434538, 429665, etc<br/>For a sample list of playerIds: https://statsapi.mlb.com/api/v1/sports/1/players?season=2019
       */
      id?: number;
      /** @description If current id searched for is a currently player */
      isPlayer?: boolean;
      /** @description Complete and confirmed all biographical data */
      isVerified?: boolean;
      jobEntries?: components["schemas"]["RosterEntryRestObject"][];
      /** @description Last name of a player */
      lastName?: string;
      /**
       * Format: date
       * @description Date of last game played. Format: 1983-01-07
       */
      lastPlayedDate?: string;
      /** @description Link to full resource */
      link?: string;
      /** @description Middle name of a player */
      middleName?: string;
      /** @description Matrilineal name for player. */
      nameMatrilineal?: string;
      nationality?: string;
      /** @description Nick nme for a player. Example: The Freak */
      nickName?: string;
      /** @description All of the details of a player's other names */
      otherNames?: components["schemas"]["OtherNamesRestObject"];
      /** @description Links to images of person. */
      photos?: components["schemas"]["PhotoRestObject"][];
      /** @description The jersey number a player wears */
      primaryNumber?: string;
      /** @description All of the details of a player's primary position */
      primaryPosition?: components["schemas"]["PositionRestObject"];
      /** @description Pronunciation guide for a player's name */
      pronunciation?: string;
      /** @description Whether or not a player is a rookie */
      rookie?: boolean;
      rosterEntries?: components["schemas"]["RosterEntryRestObject"][];
      /** @description All of the details of a player's social media */
      social?: components["schemas"]["SocialMediaRestObject"];
      /** @description All of the details of a player's stats */
      stats?: components["schemas"]["StatContainerRestObject"][];
      /** @description Name a player uses */
      useName?: string;
      /**
       * Format: int32
       * @description Weight of a player. Format: 230
       */
      weight?: number;
    };
    PhotoRestObject: {
      defaultRes?: string;
      doubleRes?: string;
      lowRes?: string;
      photoType?: string;
      tripleRes?: string;
    };
    Play: unknown;
    PlayRestObject: {
      /** @description Includes all details of a play */
      play?: components["schemas"]["Play"];
    };
    PlayerDraftInfoRestObject: {
      /** Format: int32 */
      pickInRound?: number;
      /** Format: int32 */
      pickOverall?: number;
      /** @description Round in which a player was drafted */
      round?: string;
      /** @description All of the details of a team */
      team?: components["schemas"]["TeamRestObject"];
      /**
       * Format: int32
       * @description Year the player was drafted. Format: 2000
       */
      year?: number;
    };
    PositionRestObject: {
      /** @description Position abbreviation. Format: SS, P, 1B, etc<br/>For a list of all positions: https://statsapi.mlb.com/api/v1/positions */
      abbreviation?: string;
      /** @description Position number. Format: 1, 2, 3, etc<br/>For a list of all positions: https://statsapi.mlb.com/api/v1/positions */
      code?: string;
      /** @description Position name. Format: First base, Shortstop, Pitcher, etc<br/>For a list of all positions: https://statsapi.mlb.com/api/v1/positions */
      name?: string;
      /** @description Position type. Format: Infielder, Pitcher, etc<br/>For a list of all positions: https://statsapi.mlb.com/api/v1/positions */
      type?: string;
    };
    PromotionRestObject: {
      /** @description Link to full resource */
      altPageUrl?: string;
      description?: string;
      displayIfPast?: boolean;
      distribution?: string;
      /** @description Link to full resource */
      imageUrl?: string;
      /** @description Unique Name */
      name?: string;
      /** Format: int32 */
      offerId?: number;
      offerType?: string;
      /** Format: int32 */
      order?: number;
      other?: string;
      presentedBy?: string;
      sortKey?: string;
      /**
       * Format: int32
       * @description Unique team identifier
       */
      teamId?: number;
      /** @description Link to full resource */
      thumbnailUrl?: string;
      /** @description Link to full resource */
      tlink?: string;
    };
    ProspectListRestObject: unknown;
    RosterEntryRestObject: {
      alternateCaptain?: boolean;
      captain?: boolean;
      /**
       * Format: date
       * @description End date for range of data (must be used with start date). Format: MM/DD/YYYY
       */
      endDate?: string;
      /** @description Whether or not a player is active */
      isActive?: boolean;
      isActiveFortyMan?: boolean;
      /** @description Jersey number that a player wears. Format: 16, 34, etc */
      jerseyNumber?: string;
      job?: string;
      jobId?: string;
      note?: string;
      /** Format: int32 */
      parentTeamId?: number;
      /** @description All of the details of a player */
      person?: components["schemas"]["PersonRestObject"];
      /** @description All of the details of a player's position */
      position?: components["schemas"]["PositionRestObject"];
      /**
       * Format: date
       * @description Start date for range of data (must be used with end date). Format: MM/DD/YYYY
       */
      startDate?: string;
      /** @description Type of statistics. Format: Individual, Team, Career, etc.<br/>For a list of all statTypes: https://statsapi.mlb.com/api/v1/statTypes */
      stats?: components["schemas"]["Stats"];
      status?: components["schemas"]["DynamicEnumRestObject"];
      /** Format: date */
      statusDate?: string;
      /** @description All of the details of a team */
      team?: components["schemas"]["TeamRestObject"];
      title?: string;
    };
    RosterRestObject: {
      /** @description Link to full resource */
      link?: string;
      /** @description All of the details of a roster */
      roster?: components["schemas"]["RosterEntryRestObject"][];
      /** @description Type of roster.<br/>For a list of all rosterTypes: https://statsapi.mlb.com/api/v1/rosterTypes */
      rosterType?: string;
      /**
       * Format: int32
       * @description Unique team identifier
       */
      teamId?: number;
    };
    ScheduleItemRestObject: {
      /** @description All of the promotional details */
      atBatPromotions?: components["schemas"]["PromotionRestObject"][];
      /** @description All of the ticket details */
      atBatTickets?: components["schemas"]["TicketRestObject"][];
      /** @description All of the broadcast details */
      broadcasts?: components["schemas"]["BroadcastRestObject"][];
      /** @description All of the details of game content */
      content?: components["schemas"]["GameContentRestObject"];
      /** @description All the details about the decisions of a game. Includes, Winner, Loser, and Save */
      decisions?: components["schemas"]["DecisionRestObject"];
      /**
       * Format: date-time
       * @description Format: YYYY-MM-DDTHH:MM:SSZ
       */
      endDateTime?: string;
      /**
       * Format: date-time
       * @description Date of Game. Format: YYYY-MM-DD
       */
      gameDate?: string;
      gameInfo?: components["schemas"]["GameInfoRestObject"];
      /** Format: int32 */
      gameNumber?: number;
      /**
       * Format: int32
       * @description Unique Primary Key Representing a Game
       */
      gamePk?: number;
      /** @description Type of Game. Available types in /api/v1/gameTypes */
      gameType?: string;
      isDefaultGame?: boolean;
      isFeaturedGame?: boolean;
      isTie?: boolean;
      /** @description Link to full resource */
      link?: string;
      /**
       * Format: date
       * @description Official Date of Game for Statistical Record. Format: YYYY-MM-DD
       */
      officialDate: string;
      officials?: components["schemas"]["OfficialRestObject"][];
      pregameOfficials?: components["schemas"]["OfficialRestObject"][];
      /** @description All of the promotional details */
      promotions?: components["schemas"]["PromotionRestObject"][];
      publicFacing?: boolean;
      /** @description All of the radio broadcast details */
      radioBroadcasts?: components["schemas"]["BroadcastRestObject"][];
      /** Format: date-time */
      rescheduleDate?: string;
      /** Format: date-time */
      rescheduledFrom?: string;
      /** Format: date-time */
      resumeDate?: string;
      /** Format: date-time */
      resumedFrom?: string;
      scoringPlays?: components["schemas"]["PlayRestObject"][];
      /** @description Season of play */
      season?: string;
      seriesStatus?: components["schemas"]["SeriesStatusRestObject"];
      seriesSummary?: components["schemas"]["TournamentSeriesSummaryRestObject"];
      /** Format: int32 */
      sortNumber?: number;
      /** @description All of the sponsorship details */
      sponsorships?: components["schemas"]["PromotionRestObject"][];
      /** @description Status and state of the game.<br/>For a list of all gameStatus: https://statsapi.mlb.com/api/v1/gameStatus */
      status?: components["schemas"]["GameStatusRestObject"];
      /** @description All of the ticket details */
      tickets?: components["schemas"]["TicketRestObject"][];
      /** @description All of the details of a venue<br/>For a list of all venueIds: https://statsapi.mlb.com/api/v1/venues */
      venue?: components["schemas"]["VenueRestObject"];
      weather?: components["schemas"]["WeatherRestObject"];
      xrefIds?: components["schemas"]["XrefIdRestObject"][];
    };
    ScheduleRestObject: unknown;
    SchoolRestObject: {
      /** @description City where the venue is located. Format: Cleveland */
      city?: string;
      /** @description Filter players by their home country */
      country?: string;
      /** @description Unique Name */
      name?: string;
      schoolClass?: string;
      /** @description State where the venue is located. Format: Ohio */
      state?: string;
    };
    SeasonRestObject: {
      /**
       * Format: date
       * @description Date of the all-star game. Format: YYYY-MM-DD
       */
      allStarDate?: string;
      /**
       * Format: date
       * @description Date of the first day of the second half of the regular season. Format: YYYY-MM-DD
       */
      firstDate2ndHalf?: string;
      /**
       * Format: date
       * @description Date of the last day of the first half of the regular season. Format: YYYY-MM-DD
       */
      lastDate1stHalf?: string;
      /**
       * Format: date
       * @description Date the postseason ends. Format: YYYY-MM-DD
       */
      postSeasonEndDate?: string;
      /**
       * Format: date
       * @description Date the postseason starts. Format: YYYY-MM-DD
       */
      postSeasonStartDate?: string;
      /**
       * Format: date
       * @description Date the preseason ends. Format: YYYY-MM-DD
       */
      preSeasonEndDate?: string;
      /**
       * Format: date
       * @description Date the preseason starts. Format: YYYY-MM-DD
       */
      preSeasonStartDate?: string;
      /**
       * Format: date
       * @description Date the regular season ends. Format: YYYY-MM-DD
       */
      regularSeasonEndDate?: string;
      /**
       * Format: date
       * @description Date the regular season starts. Format: YYYY-MM-DD
       */
      regularSeasonStartDate?: string;
      /** @description Season of play */
      seasonId?: string;
    };
    SeriesStatusRestObject: {
      description?: string;
      /** Format: int32 */
      gameNumber?: number;
      isOver?: boolean;
      isTied?: boolean;
      losingTeam?: components["schemas"]["TeamRestObject"];
      /**
       * Format: int32
       * @description The number of losses a team has. Format: 0, 12, 90, etc
       */
      losses?: number;
      result?: string;
      shortDescription?: string;
      /** @description Shortened version of name. Format: AL East, SF Giants */
      shortName?: string;
      /** Format: int32 */
      ties?: number;
      /** Format: int32 */
      totalGames?: number;
      winningTeam?: components["schemas"]["TeamRestObject"];
      /**
       * Format: int32
       * @description The number of wins a team has. Format: 0, 12, 90, etc
       */
      wins?: number;
    };
    SocialMediaRestObject: {
      /** @description The player's username and ID. Format: Username - georgekontos70, ID - 242731055756840 */
      facebook?: string[];
      googleplus?: string[];
      hashtags?: string[];
      /** @description The player's username. Format: joepanik, hunterpence, etc */
      instagram?: string[];
      periscope?: string[];
      pinterest?: string[];
      snapchat?: string[];
      tumblr?: string[];
      /** @description The player's handle. Format: @Bbelt9, @bcraw35, etc */
      twitter?: string[];
      vine?: string[];
      website?: string[];
      youtube?: string[];
    };
    Sport: unknown;
    SportRestObject: {
      /** @description Shortened version of short name. Format: ALE, SFG */
      abbreviation?: string;
      /** @description Flag for fetching sports that are currently active (Y), inactive (N), pending (P), or all teams (B) */
      active?: boolean;
      code?: string;
      deviceProperties?: components["schemas"]["JsonNode"];
      /**
       * Format: int32
       * @description Top level organization of a sport<br/>For a list of all sportIds: https://statsapi.mlb.com/api/v1/sports
       */
      id?: number;
      /** @description Link to full resource */
      link?: string;
      /** @description Name of a sport's league. Format: Major League Baseball */
      name?: string;
      /**
       * Format: int32
       * @description Determines the sort order of each sport. (ex. MLB -> AAA -> AA -> Rookie)
       */
      sortOrder?: number;
    };
    StatContainerRestObject: {
      exemptions?: components["schemas"]["StatExemptionRestObject"][];
      /** @description All of the details of a player */
      player?: components["schemas"]["Person"];
      /** @description Season of play */
      season?: string;
      /** @description All of the details of stat splits */
      splits?: components["schemas"]["StatSplitsRestObject"][];
      splitsTiedWithLimit?: components["schemas"]["StatSplitsRestObject"][];
      splitsTiedWithOffset?: components["schemas"]["StatSplitsRestObject"][];
      /** @description The sport the league belongs to<br/>For a list of all sportIds: https://statsapi.mlb.com/api/v1/sports */
      sport?: components["schemas"]["Sport"];
      stats?: components["schemas"]["StatDataRestObject"];
      /** @description All of the details of a team */
      team?: components["schemas"]["Team"];
      /** Format: int32 */
      totalSplits?: number;
    };
    StatDataRestObject: unknown;
    StatExemptionRestObject: {
      exemptionId?: string;
      exemptionName?: string;
      /** @description All of the details of a player */
      player?: components["schemas"]["PersonRestObject"];
    };
    StatSplitsRestObject: {
      awayTeam?: components["schemas"]["TeamRestObject"];
      /**
       * Format: date
       * @description Date of Game. Format: YYYY-MM-DD
       */
      date?: string;
      /** Format: int32 */
      dayOfWeek?: number;
      exemption?: components["schemas"]["StatExemptionRestObject"];
      /** @description Type of Game. Available types in /api/v1/gameTypes */
      gameType?: string;
      group?: string;
      homeTeam?: components["schemas"]["TeamRestObject"];
      isHome?: boolean;
      isWin?: boolean;
      /** @description The league the division belongs to<br/>For a list of all leagueIds: https://statsapi.mlb.com/api/v1/leagues */
      league?: components["schemas"]["LeagueRestObject"];
      /** Format: int32 */
      month?: number;
      /** Format: int32 */
      numOccurrences?: number;
      /**
       * Format: int32
       * @description The number of teams
       */
      numTeams?: number;
      /** @description All of the details of an opponent */
      opponent?: components["schemas"]["TeamRestObject"];
      opponentConference?: components["schemas"]["ConferenceRestObject"];
      opponentDivision?: components["schemas"]["DivisionRestObject"];
      /** @description All of the details of a player */
      player?: components["schemas"]["PersonRestObject"];
      /** Format: int32 */
      rank?: number;
      /** @description All of the details of a schedule */
      scheduleItemRestObject?: components["schemas"]["ScheduleItemRestObject"];
      /** @description Season of play */
      season?: string;
      split?: components["schemas"]["DynamicEnumRestObject"];
      /** @description The sport the league belongs to<br/>For a list of all sportIds: https://statsapi.mlb.com/api/v1/sports */
      sport?: components["schemas"]["SportRestObject"];
      /** @description Type of statistics. Format: Individual, Team, Career, etc.<br/>For a list of all statTypes: https://statsapi.mlb.com/api/v1/statTypes */
      stat?: components["schemas"]["StatDataRestObject"];
      /** @description Type of statistics. Format: Individual, Team, Career, etc.<br/>For a list of all statTypes: https://statsapi.mlb.com/api/v1/statTypes grouped */
      stats: components["schemas"]["GroupedStatDataRestObject"];
      /** @description All of the details of a team */
      team?: components["schemas"]["TeamRestObject"];
      type?: string;
      /** @description All of the details of a venue<br/>For a list of all venueIds: https://statsapi.mlb.com/api/v1/venues */
      venue?: components["schemas"]["VenueRestObject"];
    };
    Stats: unknown;
    StreakRestObject: {
      streakCode?: string;
      /** Format: int32 */
      streakNumber?: number;
      streakType?: string;
    };
    Team: unknown;
    TeamContentCms: unknown;
    TeamPlayoffs: unknown;
    TeamRestObject: {
      /** @description Shortened version of short name. Format: ALE, SFG */
      abbreviation?: string;
      /** @description All the details of a conference */
      conference?: components["schemas"]["ConferenceRestObject"];
      content?: components["schemas"]["TeamContentCms"];
      deviceProperties?: components["schemas"]["JsonNode"];
      /** @description All of the details of a division */
      division?: components["schemas"]["DivisionRestObject"];
      /** @description Unique File Code. Format: tor, nyy, etc */
      fileCode?: string;
      /** @description The first year of play. Format: 1903 */
      firstYearOfPlay?: string;
      /** @description All of the details of a franchise */
      franchise?: components["schemas"]["FranchiseRestObject"];
      homeAway?: string;
      /**
       * Format: int32
       * @description Unique team identifier
       */
      id?: number;
      isActive?: boolean;
      isPlaceholder?: boolean;
      /** @description The league the division belongs to<br/>For a list of all leagueIds: https://statsapi.mlb.com/api/v1/leagues */
      league?: components["schemas"]["LeagueRestObject"];
      /** @description Link to full resource */
      link?: string;
      /** @description Unique Team Location. Toronto, Bronx, etc */
      locationName?: string;
      /** @description Unique Full Team Name. Format: Toronto Blue Jays, New York Yankees, etc */
      name?: string;
      nextGameSchedule?: components["schemas"]["ScheduleRestObject"];
      nextSchedule?: components["schemas"]["ScheduleRestObject"];
      /** Format: int32 */
      parentOrgId?: number;
      parentOrgName?: string;
      playoffInfo?: components["schemas"]["TeamPlayoffs"];
      previousGameSchedule?: components["schemas"]["ScheduleRestObject"];
      previousSchedule?: components["schemas"]["ScheduleRestObject"];
      /** @description All of the details of a team's record */
      record?: components["schemas"]["TeamStandingsRecordRestObject"];
      /** @description All of the details of a roster */
      roster?: components["schemas"]["RosterRestObject"];
      /**
       * Format: int32
       * @description Season of play
       */
      season?: number;
      /** @description Shortened version of name. Format: AL East, SF Giants */
      shortName?: string;
      /** @description All of the details of a player's social media */
      social?: components["schemas"]["SocialMediaRestObject"];
      /** @description The sport the league belongs to<br/>For a list of all sportIds: https://statsapi.mlb.com/api/v1/sports */
      sport?: components["schemas"]["SportRestObject"];
      /** @description All of the details of a venue<br/>For a list of all venueIds: https://statsapi.mlb.com/api/v1/venues */
      springVenue?: components["schemas"]["VenueRestObject"];
      /** @description Unique Team Code. Format: tor, nya, etc */
      teamCode?: string;
      teamDesignation?: string;
      /** @description All of the details of team leaders */
      teamLeaders?: components["schemas"]["LeadersRestObject"][];
      /** @description Unique Team Name. Blue Jays, Yankees, etc */
      teamName?: string;
      /** @description All of the details of a player's stats */
      teamStats?: components["schemas"]["StatContainerRestObject"][];
      /** @description Three letter abbreviation that will be adjusted for different languages */
      triCode?: string;
      /** @description All of the details of a venue<br/>For a list of all venueIds: https://statsapi.mlb.com/api/v1/venues */
      venue?: components["schemas"]["VenueRestObject"];
    };
    TeamStandingsRecordRestObject: {
      clinchIndicator?: string;
      /** @description All the details of a conference */
      conference?: components["schemas"]["Conference"];
      conferenceGamesBack?: string;
      conferenceRank?: string;
      /** @description All of the details of a division */
      division?: components["schemas"]["Division"];
      divisionGamesBack?: string;
      divisionRank?: string;
      gamesBack?: string;
      /** Format: int32 */
      gamesPlayed?: number;
      /** @description The league the division belongs to<br/>For a list of all leagueIds: https://statsapi.mlb.com/api/v1/leagues */
      league?: components["schemas"]["League"];
      leagueGamesBack?: string;
      leagueRank?: string;
      leagueRecord?: components["schemas"]["WinLossRecordRestObject"];
      /** @description Season of play */
      season?: string;
      sportGamesBack?: string;
      sportRank?: string;
      springLeagueGamesBack?: string;
      springLeagueRank?: string;
      streak?: components["schemas"]["StreakRestObject"];
      /** @description All of the details of a team */
      team?: components["schemas"]["TeamRestObject"];
      wildCardGamesBack?: string;
      wildCardRank?: string;
    };
    TicketRestObject: {
      /** @description Link to full resource */
      ticketLink?: string;
      ticketType?: string;
    };
    TimeZoneRestObject: {
      /** @description Format: America/Detroit */
      id?: string;
      /**
       * Format: int32
       * @description The offset in hours from UTC. Format: -5
       */
      offset?: number;
      /** @description Time zone the venue is located in */
      tz?: string;
    };
    TournamentSeriesSummaryRestObject: unknown;
    TransactionRestObject: {
      /**
       * Format: date-time
       * @description Format: YYYY-MM-DDTHH:MM:SSZ
       */
      date?: string;
      description?: string;
      /** Format: date-time */
      effectiveDate?: string;
      fromTeam?: components["schemas"]["TeamRestObject"];
      /**
       * Format: int32
       * @description Unique Identifier
       */
      id?: number;
      isConditional?: boolean;
      /** @description All of the details of a player */
      person?: components["schemas"]["PersonRestObject"];
      /** Format: date-time */
      resolutionDate?: string;
      toTeam?: components["schemas"]["TeamRestObject"];
      type?: string;
    };
    VenueRestObject: {
      /** @description Dimensions and capacity of the venue */
      fieldInfo?: components["schemas"]["FieldInfoRestObject"];
      /**
       * Format: int32
       * @description Unique Identifier
       */
      id?: number;
      /** @description Link to full resource */
      link?: string;
      /** @description Location details about the venue */
      location?: components["schemas"]["LocationRestObject"];
      /** @description Unique Name */
      name?: string;
      /** @description Time zone the venue is located in */
      timeZone?: components["schemas"]["TimeZoneRestObject"];
    };
    VideoResolutionEnumRestObject: unknown;
    WeatherRestObject: {
      condition?: string;
      temp?: string;
      wind?: string;
    };
    WinLossRecordRestObject: {
      /** Format: int32 */
      losses?: number;
      pct?: string;
      /** Format: int32 */
      ties?: number;
      type?: string;
      /** Format: int32 */
      wins?: number;
    };
    XrefIdRestObject: unknown;
  };
}

export interface operations {
  /**
   * **Description:**
   * This endpoint returns biographical and financial data for the Rule 4 draft.
   *
   * **Return Includes:** Player name, id, financial data, & team data.
   *
   * **Required Parameters:** year is required to run this call.
   *
   * ---
   * **Example of call with required parameters:**
   *
   * https://statsapi.mlb.com/api/v1/draft/2018
   *
   * ---
   * **Example of call with all parameters:**
   *
   * https://statsapi.mlb.com/api/v1/draft/2018?limit=1&round=1&name=M&school=A&position=P&teamId=116&playerId=663554&bisPlayerId=759143
   */
  draft: {
    parameters: {
      path: {
        /**
         * Insert year to return biographical and financial data for a specific Rule 4 draft.
         * 1. Insert year:  https://statsapi.mlb.com/api/v1/draft/2018
         */
        year: number;
      };
      query: {
        /**
         * Insert a limit to limit return. Limit number applies to each round.
         * 1. Insert limit:  https://statsapi.mlb.com/api/v1/draft/2018?limit=1
         */
        limit?: number;
        /**
         * Comma delimited list of specific fields to be returned. Format:
         * topLevelNode, childNode, attribute
         *
         * Example: https://statsapi.mlb.com/api/v1/draft/2018?fields=drafts,draftYear,rounds,round
         */
        fields?: string[];
        /**
         * Insert a round to return biographical and financial data for a specific round in a Rule 4 draft.
         * 1. Insert limit:  https://statsapi.mlb.com/api/v1/draft/2018?round=1
         */
        round?: string;
        /**
         * Insert the first letter of a draftees last name to return their Rule 4 biographical and financial data.
         * 1. Insert name:  https://statsapi.mlb.com/api/v1/draft/2018?name=M
         */
        name?: string;
        /**
         * Insert the first letter of a draftees school to return their Rule 4 biographical and financial data.
         * 1. Insert school:  https://statsapi.mlb.com/api/v1/draft/2018?&school=A
         */
        school?: string;
        /**
         * Insert state to return a list of Rule 4 draftees from that given state
         * 1. Insert state:  https://statsapi.mlb.com/api/v1/draft/2018?&state=NY
         */
        state?: string;
        /**
         * Insert state to return a list of Rule 4 draftees from that given state
         * 1. Insert state:  https://statsapi.mlb.com/api/v1/draft/2018?&country=PR
         */
        country?: string;
        /**
         * Insert the position  to return Rule 4 biographical and financial data for a players drafted at that position.
         * 1. Insert position: https://statsapi.mlb.com/api/v1/draft/2018?position=P
         *
         *  **Find available positions at https://statsapi.mlb.com/api/v1/positions**
         */
        position?:
          | "P"
          | "C"
          | "1B"
          | "2B"
          | "3B"
          | "SS"
          | "LF"
          | "CF"
          | "RF"
          | "DH"
          | "PH"
          | "PR"
          | "BR"
          | "OF"
          | "IF"
          | "SP"
          | "RP"
          | "CP"
          | "UT"
          | "UI"
          | "UO"
          | "RHP"
          | "LHP"
          | "RHS"
          | "LHS"
          | "LHR"
          | "RHR"
          | "B"
          | "X";
        /**
         * Insert teamId  to return Rule 4 biographical and financial data for all picks made by a specific team.
         * 1. Insert teamId: https://statsapi.mlb.com/api/v1/draft/2018?teamId=116
         *
         * For a list of all teamIds:  https://statsapi.mlb.com/api/v1/teams
         */
        teamId?: number;
        /**
         * Insert MLB playerId to return a player's Rule 4 biographical and financial data for a specific Rule 4 draft.
         * 1. Insert playerId: https://statsapi.mlb.com/api/v1/draft/2018?playerId=663554
         */
        playerId?: number;
        /**
         * Insert bisPlayerId to return a player's Rule 4 biographical and financial data for a specific Rule 4 draft.
         * 1. Insert bisPlayerId: https://statsapi.mlb.com/api/v1/draft/2018?bisPlayerId=759143
         */
        bisPlayerId?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["BaseballDraftListRestObject"];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /**
   * **Description:**
   * This endpoint returns biographical and financial data for Rule 4 draft eligible prospects.
   *
   * **Return Includes:** Player name, id, financial data, & team data.
   *
   * **Required Parameters:** year is required to run this call.
   *
   * ---
   * **Example of call with required parameters:**
   *
   *  https://statsapi.mlb.com/api/v1/draft/prospects/2018
   *
   * ---
   * **Example of call with all parameters:**
   *
   *  https://statsapi.mlb.com/api/v1/draft/prospects/2018?limit=1&round=1&name=M&school=A&position=P&teamId=116&playerId=663554&bisPlayerId=759143
   */
  draftProspects: {
    parameters: {
      path: {
        /**
         * Insert year to return biographical and financial data for a specific Rule 4 draft's eligibile prospects.
         * 1. Insert year:  https://statsapi.mlb.com/api/v1/draft/prospects/2018
         */
        year: number;
      };
      query: {
        /**
         * Insert a limit to limit return. Limit number applies to each round.
         * 1. Insert limit:  https://statsapi.mlb.com/api/v1/draft/prospects/2018?limit=1
         */
        limit?: number;
        /**
         * Comma delimited list of specific fields to be returned. Format:
         * topLevelNode, childNode, attribute
         *
         * Example: https://statsapi.mlb.com/api/v1/draft/prospects/2018?fields=drafts,draftYear,rounds,round
         */
        fields?: string[];
        /**
         * Insert a round to return biographical and financial data for a specific round in a Rule 4 draft.
         * 1. Insert limit:  https://statsapi.mlb.com/api/v1/draft/prospects/2018?round=1
         */
        round?: string;
        /**
         * Insert the first letter of an eligible draftee's last name to return their  Rule 4 biographical and financial data.
         * 1. Insert name:  https://statsapi.mlb.com/api/v1/draft/prospects/2018?name=M
         */
        name?: string;
        /**
         * Insert the first letter of an eligible draftee's school to return their  Rule 4 biographical and financial data.
         * 1. Insert school: https://statsapi.mlb.com/api/v1/draft/prospects/2018?&school=A
         */
        school?: string;
        /**
         * Insert state to return a list of Rule 4 draftees from that given state
         * 1. Insert state:  https://statsapi.mlb.com/api/v1/draft/prospects/2018?&state=NY
         */
        state?: string;
        /**
         * Insert state to return a list of Rule 4 draftees from that given state
         * 1. Insert state:  https://statsapi.mlb.com/api/v1/draft/prospects/2018?&country=PR
         */
        country?: string;
        /**
         * Insert the position  to return an eligible draftee's Rule 4 biographical and financial data for a players drafted at that position.
         * 1. Insert position: https://statsapi.mlb.com/api/v1/draft/prospects/2018?position=P
         *
         *  **Find available positions at https://statsapi.mlb.com/api/v1/positions**
         */
        position?:
          | "P"
          | "C"
          | "1B"
          | "2B"
          | "3B"
          | "SS"
          | "LF"
          | "CF"
          | "RF"
          | "DH"
          | "PH"
          | "PR"
          | "BR"
          | "OF"
          | "IF"
          | "SP"
          | "RP"
          | "CP"
          | "UT"
          | "UI"
          | "UO"
          | "RHP"
          | "LHP"
          | "RHS"
          | "LHS"
          | "LHR"
          | "RHR"
          | "B"
          | "X";
        /**
         * Insert teamId  to return Rule 4 biographical and financial data for all picks made by a specific team.
         * 1. Insert teamId: https://statsapi.mlb.com/api/v1/draft/prospects/2018?teamId=116
         *
         * For a list of all teamIds:  https://statsapi.mlb.com/api/v1/teams
         */
        teamId?: number;
        /**
         * Insert MLB playerId to return an eligible draftee's Rule 4 biographical and financial data a specific Rule 4 draft.
         * 1. Insert playerId: https://statsapi.mlb.com/api/v1/draft/prospects/2018?playerId=663554
         */
        playerId?: number;
        /**
         * Insert bisPlayerId to return an eligible draftee's Rule 4 biographical and financial data a specific Rule 4 draft.
         * 1. Insert bisPlayerId: https://statsapi.mlb.com/api/v1/draft/prospects/2018?bisPlayerId=759143
         */
        bisPlayerId?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["ProspectListRestObject"];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  /**
   * **Description:**
   * This endpoint returns biographical and financial data for the most recent pick in the Rule 4 draft.
   *
   * **Return Includes:** Player name, id, financial data, & team data.
   *
   * **Required Parameters:** year is required to run this call.
   *
   * ---
   * **Example of call with required parameters:**
   *
   * https://statsapi.mlb.com/api/v1/draft/2018/latest
   */
  latestDraftPicks: {
    parameters: {
      path: {
        /**
         * Insert year to return biographical and financial data for the most recent pick in the Rule 4 draft.
         * 1. Insert year:  https://statsapi.mlb.com/api/v1/draft/2018/latest
         */
        year: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["BaseballDraftLatestRestObject"];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
}

export interface external {}
